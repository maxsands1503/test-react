{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-field/search-field.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","el","SearchField","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAEjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCNlBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACC,GACjB,OAAO,cAAC,EAAD,CAAkBP,QAASO,GAAhBA,EAAGN,UCJxBO,G,MAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAEtC,OACI,uBAAOC,KAAK,SACLF,YAAaA,EACbZ,UAAU,SACVe,SAAUF,MCuCVG,E,kDAxCb,aAAe,IAAD,8BACZ,gBAcJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IAJL,E,qDAShB,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAO9C,WAEE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YAEZU,EAAmC,KAAhBV,EAAqBX,EAAYA,EAASsB,QAAO,SAAA3B,GACtE,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAASE,KAAK0B,cAAcC,SAASb,EAAYY,kBAG5D,OAEI,sBAAK/B,UAAU,MAAf,UACI,oBAAIA,UAAU,QAAd,8BACA,cAAC,EAAD,CAAaY,YAAa,kBAAmBC,aAAce,KAAKf,eAClE,cAAC,EAAD,CAAUL,SAAUqB,W,GAlCXI,aCMJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0703fbbc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css';\r\n\r\nexport const Card = (props) => {\r\n\r\n    return(\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h2>{props.monster.name}</h2>\r\n            <h3>{props.monster.email}</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './card-list.css';\r\nimport {Card} from '../card/card';\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map((el) => {\r\n                return <Card key={el.id} monster={el}></Card>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './search-field.css';\r\n\r\nexport const SearchField = ({placeholder, handleChange}) => {\r\n\r\n    return (\r\n        <input type='search'\r\n               placeholder={placeholder}\r\n               className='search'\r\n               onChange={handleChange}/>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport React, { Component } from 'react';\nimport {CardList} from \"./components/card-list/card-list\";\nimport {SearchField} from \"./components/search-field/search-field\";\n\nclass App extends  Component {\n\n  constructor() {\n    super();\n    this.state = {\n        monsters: [],\n        searchField: ''\n    }\n\n  }\n\ncomponentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then((res) => res.json())\n        .then(users => this.setState({monsters: users}));\n}\n\nhandleChange = (e) => {\n    this.setState({searchField: e.target.value})\n}\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = searchField === '' ? monsters :  monsters.filter(monster => {\n        return monster?.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n\n    return (\n\n        <div className='App'>\n            <h1 className='title'>Monsters Rolodex</h1>\n            <SearchField placeholder={'Search Monsters'} handleChange={this.handleChange}></SearchField>\n          <CardList monsters={filteredMonsters}>\n\n          </CardList>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}